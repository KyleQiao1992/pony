<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pony.dao.ProductTypeForMobileDAO">

    <!--获取一级类目链表-->
    <select id="getFirstProductTypeList" resultType="com.pony.productManage.entity.ProductType">

        SELECT <include refid="ProductTypeColumnList"/>
        FROM `product_type` as pt
        where pt.parent_id = 0;

    </select>

    <!--根据父类目ID获取子类目链表-->
    <select id="getChildProductTypeListByParentProductTypeId"  parameterType="com.pony.MobileInterface.entity.queryBean.ProductTypeQueryBean" resultType="com.pony.productManage.entity.ProductType">
        SELECT <include refid="ProductTypeColumnList"/>
        FROM `product_type` as pt
        where pt.parent_id = #{parentId}
        <include refid="page_sql"/>
    </select>

    <!--根据类目ID获取商品链表-->
    <select id="getProductByProductTypeId" parameterType="com.pony.MobileInterface.entity.queryBean.ProductTypeQueryBean" resultType="com.pony.productManage.entity.Product">
        SELECT <include refid="ProductColumnList"/>
        FROM (
            SELECT *
            FROM `product` as pro
            left join product_to_product_type as ptpt
            on pro.id = ptpt.product_id
            where ptpt.product_type_id = #{productTypeId}

            <include refid="page_sql"/>
        ) as p
        <include refid="jionPrice"/>
        <include refid="order_by"/>
    </select>
    <!--根据产品ID获取三级类目ID-->
    <select id="getProductTypeByProductId" parameterType="java.lang.Integer" resultType="com.pony.productManage.entity.ProductType">
        SELECT <include refid="ProductTypeColumnList"/>
        FROM product_to_product_type as ptpt
        left join `product_type` as pt
        on ptpt.product_type_id = pt.id
        where ptpt.product_id = #{productId}
    </select>
    <!--根据二级类目ID获取产品列表-->
    <select id="getProductListBySecondProductTypeId" parameterType="com.pony.productManage.entity.ProductType" resultType="com.pony.productManage.entity.Product">
        SELECT <include refid="ProductColumnList"/>
        FROM (
            SELECT *
            FROM product_to_product_type as ptpt
            left join `product` as pro
            on ptpt.product_id = pro.id
            where ptpt.product_type_id in(
                select id
                from product_type as pt
                where pt.parent_id in
                <foreach item="item" index="index" collection="productTypeList" open="(" separator="," close=")">
                    #{item.parentId}
                </foreach>
            )
            AND pro.id != #{productId}
            order by pro.weight desc
            limit 0,6
        ) as p
        <include refid="jionPrice"/>
    </select>
    <!--resultMap and sql-->

    <sql id="ProductColumnList">
        distinct p.id as id,
        p.product_name as productName,
        p.product_number as productNumber,
        p.reservation_id as reservationId,
        p.product_icon_url as productIconUrl,
        p.weight as weight,
        p.product_width as productWidth,
        p.product_length as productLength,
        p.product_high as productHigh,
        p.promotion_type as promotionType,
        p.promotion_begin_time as promotionBeginTime,
        p.promotion_end_time as promotionEndTime,
        p.promotion_number as promotionNumber,
        p.promotion_number_original as promotionNumberOriginal,
        p.promotion_price as promotionPrice,
        p.id_restriction_number as idRestrictionNumber,
        p.credit_score as creditScore,
        p.category_code_one as categoryCodeOne,
        p.category_code_two as categoryCodeTwo,
        p.category_code_three as categoryCodeThree,
        p.reservation_id as reservationId,
        reservation_pic_url as reservationPicUrl,
        reservation_pic_height as reservationPicHeight,
        reservation_pic_width as reservationPicWidth,
        p.unit as unit,
        p.monthly_sales as monthlySales,
        pp.price as originalPrice
    </sql>

    <sql id="jionPrice">
        left join (
            select *
            from (
                select *
                from product_price
                where enable_date &lt;= current_date
            )a
            group by a.product_id
            having max(a.enable_date)
        ) pp
        on p.id =pp.product_id
    </sql>

    <sql id="ProductTypeColumnList">
        pt.id as id,
        pt.product_type_name as productTypeName,
        pt.parent_id as parentId,
        pt.product_type_icon_url as productTypeIconUrl

    </sql>

    <sql id = "order_by">
        <!--按权重排序-->
        <if test="orderByColumn == 1">
            order by p.weight desc
        </if>
        <!--按销量排序-->
        <if test="orderByColumn == 2">
            order by p.monthly_sales desc
        </if>
        <!--按价格排序-->
        <if test="orderByColumn == 3">
            order by pp.price
            <if test="ascOrDesc == 0">
                desc
            </if>
            <if test="ascOrDesc == 1">
                asc
            </if>
        </if>
        <!--按时间排序-->
        <if test="orderByColumn == 4">
            order by p.entry_time desc
        </if>
    </sql>

    <sql id = "page_sql">
        limit ${beginLine},${itemNumber}
    </sql>


</mapper>
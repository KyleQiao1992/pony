<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pony.dao.StockForMobileDAO">

    <!--根据产品ID与仓库ID查询库存数量-->
    <select id="getStockByWarehouseIdAndProductId" parameterType="java.lang.Integer" resultType="com.pony.MobileInterface.entity.Stock">
        SELECT <include refid="stockColumnList"/>
        FROM `stock` as s
        where warehouse_id = #{warehouseId}
        and product_id = #{productId}

    </select>
    <!--根据产品ID与仓库ID查询库存数量-->
    <select id="getInventoryByWarehouseIdAndProductId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT inventory
        FROM `stock`
        where warehouse_id = #{warehouseId}
        and product_id = #{productId}

    </select>

    <!--根据产品ID与仓库ID修改库存数量-->
    <update id="updateInventory" parameterType="java.lang.Integer">
        update child_order
            <set>
                <if test="childOrderNumber  != null">
                    inventory =(SELECT inventory
                                FROM `stock`
                                where warehouse_id = #{warehouseId}
                                and product_id = #{productId})-#{subtractNumber}
                </if>
            </set>
        where warehouse_id = #{warehouseId}
        and product_id = #{productId}
    </update>

    <!--根据库存ID修改库存数量-->
    <update id="updateInventoryByStockId" parameterType="java.lang.Integer">
        update stock
        <set>
            <if test="simble == 1">
                inventory =inventory - #{changeNumber}
            </if>
            <if test="simble == 0">
                inventory =inventory + #{changeNumber}
            </if>
        </set>
        where id = #{stockId}
    </update>

    <!--根据库存ID查询库存数量-->
    <select id="getInventoryByStockId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT inventory
        FROM `stock`
        where id = #{stockId}

    </select>



    <!--resultMap and sql-->

    <sql id="stockColumnList">
        s.id as id,
        s.alarm_threshold as alarmThreshold,
        s.inventory as inventory,
        s.warehouse_id as warehouseId,
        s.product_id as productId

    </sql>

</mapper>